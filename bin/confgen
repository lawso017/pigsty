#!/usr/bin/env python3
# License   :   AGPLv3 @ https://doc.pgsty.com/about/license
# Copyright :   2018-2025  Ruohang Feng / Vonng (rh@vonng.com)

import csv
import os
from datetime import datetime

SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))
DATA_PATH = os.path.abspath(os.path.join(SCRIPT_DIR, '..', 'files', 'extension.csv'))
VARS_PATH = os.path.abspath(os.path.join(SCRIPT_DIR, '..', 'roles', 'node_id', 'vars'))

DISTRO_LIST = [
    'd12.aarch64', 'd12.x86_64',
    'el8.aarch64', 'el8.x86_64',
    'el9.aarch64', 'el9.x86_64',
    'u22.aarch64', 'u22.x86_64',
    'u24.aarch64', 'u24.x86_64',
]
PG_VERS = [ '18', '17', '16', '15', '14', '13']
THROW_LIST = ['hunspell_pt_pt' , "pg_tde" , "pg_tde", "orioledb"]
HIDE_LIST = ['hydra', 'duckdb_fdw', 'pg_timeseries','pgpool', 'plr', 'pgagent', 'dbt2', 'pgtap', 'faker', 'repmgr', 'slony', 'oracle_fdw', 'pg_strom', 'db2_fdw', "orioledb" ]

# these extensions will not be added to repo_packages & pg_extension due to various reasons
DISTRO_MISS = {
    "el7": ["pg_dbms_job", "pljava"],
    "el8": ["pg_dbms_job", "pg_mooncake", "pg_duckdb", "pg_dbms_metadata"],
    "el9": ["pg_dbms_job"],
    "u24": [],
    "u22": [],
    "u20": ["pljava"],
    "d12": [],
    "d11": ["pljava"],
}

DISTRO_FULLNAME = {
    "el7": "RHEL 7 Compatible",
    "el8": "RHEL 8 Compatible",
    "el9": "RHEL 9 Compatible",
    "u24": "Ubuntu 24.04 noble Compatible",
    "u22": "Ubuntu 24.04 jammy Compatible",
    "u20": "Ubuntu 24.04 focal Compatible",
    "d12": "Debian 12 bookworm Compatible",
    "d11": "Ubuntu 11 bullseye Compatible",
}

# these extensions will be commented in pg_extensions due to conflict
EXT_NOP_LIST = ["hydra","duckdb_fdw", "hunspell_pt_pt"]

EXTRA_COMMENT = {
    'pgpool': 'exclude due to not used',
    'plr': 'exclude due to heavy deps',
    'pgagent': 'exclude due to not used',
    'dbt2': 'exclude due to not used',
    'pgtap': 'exclude due to broken perl deps',
    'faker': 'exclude due to broken perl deps',
    'repmgr': 'exclude due to not used',
    'slony': 'exclude due to not used',
    'oracle_fdw': 'exclude due to heavy oracle deps',
    'pg_strom': 'exclude due to heavy cuda deps',
    'db2_fdw': 'exclude due to heavy db2 deps',
    'citus': 'conflict with hydra',
    'hydra': 'conflict with citus, no pg17, obsolete',
    'pg_duckdb': 'conflict with duckdb_fdw',
    'duckdb_fdw': 'conflict with pg_duckdb',
    'hunspell_pt_pt': 'conflict with default pg dict',
    'pg_dbms_job': 'exclude due to broken deps',
    'pllua': 'no pg15- on el.aarch64',
    'jdbc_fdw': 'no pg15- on el.aarch64',
    'babelfishpg_common': 'work with wiltondb pg15 kernel',
    'babelfishpg_tsql': 'work with wiltondb pg15 kernel',
    'babelfishpg_tds': 'work with wiltondb pg15 kernel',
    'babelfishpg_money': 'work with wiltondb pg15 kernel',
    'pg_tde': 'work with percona postgres fork',
    'orioledb': 'work with orioledb postgres fork',
}

RPM_COMMON_PKG = [
    #"ansible python3 python3-pip python3-virtualenv python3-requests python3-jmespath python3-cryptography dnf-utils modulemd-tools createrepo_c sshpass",
    "nginx dnsmasq etcd haproxy vip-manager node_exporter keepalived_exporter pg_exporter pgbackrest_exporter redis_exporter redis minio mcli pig",
    "grafana grafana-plugins loki logcli vector promtail prometheus alertmanager pushgateway blackbox_exporter nginx_exporter pev2 certbot python3-certbot-nginx",
    "docker-ce docker-compose-plugin ferretdb2 duckdb restic juicefs vray grafana-infinity-ds",
    "lz4 unzip bzip2 zlib yum pv jq git ncdu make patch bash lsof wget uuid tuned nvme-cli numactl grubby sysstat iotop htop rsync tcpdump perf flamegraph chkconfig",
    "netcat socat ftp lrzsz net-tools ipvsadm bind-utils telnet audit ca-certificates readline vim-minimal keepalived chrony openssl openssh-server openssh-clients",
    "patroni patroni-etcd pgbouncer pgbackrest pgbadger pg_activity pg_timetable pgFormatter pg_filedump pgxnclient timescaledb-tools timescaledb-event-streamer",
]

DEB_COMMON_PKG = [
    #"ansible python3 python3-pip python3-venv python3-jmespath dpkg-dev sshpass",
    "nginx dnsmasq etcd haproxy vip-manager node-exporter keepalived-exporter pg-exporter pgbackrest-exporter redis-exporter redis minio mcli pig",
    "grafana grafana-plugins loki logcli vector promtail prometheus alertmanager pushgateway blackbox-exporter nginx-exporter pev2 certbot python3-certbot-nginx",
    "docker-ce docker-compose-plugin ferretdb2 duckdb restic juicefs vray grafana-infinity-ds",
    "lz4 unzip bzip2 zlib1g pv jq git ncdu make patch bash lsof wget uuid tuned nvme-cli numactl sysstat iotop htop rsync tcpdump acl chrony",
    "netcat-openbsd socat lrzsz net-tools ipvsadm dnsutils telnet ca-certificates libreadline-dev vim-tiny keepalived openssl openssh-server openssh-client",
    "patroni pgbouncer pgbackrest pgbadger pg-activity pg-timetable pgformatter postgresql-filedump pgxnclient timescaledb-tools timescaledb-event-streamer",
]

DISTRO_ADHOC_PKG = {
    "rpm": "ansible python3 python3-pip python3-virtualenv python3-requests python3-jmespath python3-cryptography dnf-utils modulemd-tools createrepo_c sshpass",
    "deb": "ansible python3 python3-pip python3-venv python3-jmespath dpkg-dev sshpass",
    "el7": "ansible python3 python3-pip python36-virtualenv python36-requests python36-idna yum-utils createrepo_c sshpass",
    "el8": "ansible python3 python3-pip python3-virtualenv python3-requests python3.12-jmespath python3-cryptography dnf-utils modulemd-tools createrepo_c sshpass",
    "el9": "ansible python3 python3-pip python3-virtualenv python3-requests python3-jmespath python3-cryptography dnf-utils modulemd-tools createrepo_c sshpass",
    "d11": "ansible python3 python3-pip python3-venv python3-jmespath dpkg-dev sshpass tnftp linux-perf",
    "d12": "ansible python3 python3-pip python3-venv python3-jmespath dpkg-dev sshpass tnftp linux-perf",
    "u20": "ansible python3 python3-pip python3-venv python3-jmespath dpkg-dev sshpass ftp linux-tools-generic",
    "u22": "ansible python3 python3-pip python3-venv python3-jmespath dpkg-dev sshpass ftp linux-tools-generic",
    "u24": "ansible python3 python3-pip python3-venv python3-jmespath dpkg-dev sshpass ftp linux-tools-generic",
}

RPM_VARS_TMPL = """---
# License    :   AGPLv3 @ https://doc.pgsty.com/about/license
# Copyright  :   2018-2025  Ruohang Feng / Vonng (rh@vonng.com)
# %s  :  %s OS specific vars

# where to register systemd files
systemd_dir: /usr/lib/systemd/system
syslog_path: /var/log/messages

# default packages to be downloaded (if `repo_packages` is not explicitly set)
repo_packages_default: [ node-bootstrap, infra-package, infra-addons, node-package1, node-package2, pgsql-utility, extra-modules ]

# default postgres packages to be downloaded
repo_extra_packages_default: [ pgsql-main ]

# default node packages to be installed (if `node_default_packages` is not explicitly set)
node_packages_default:
  - lz4,unzip,bzip2,pv,jq,git,ncdu,make,patch,bash,lsof,wget,uuid,tuned,nvme-cli,numactl,sysstat,iotop,htop,rsync,tcpdump
  - python3,python3-pip,socat,lrzsz,net-tools,ipvsadm,telnet,ca-certificates,openssl,keepalived,etcd,haproxy,chrony,pig
  - zlib,yum,audit,bind-utils,readline,vim-minimal,node_exporter,grubby,openssh-server,openssh-clients,chkconfig

# default infra packages to be installed (if `infra_packages` is not explicitly set)
infra_packages_default:
  - grafana,loki,logcli,prometheus,alertmanager,pushgateway,grafana-plugins,restic,certbot,python3-certbot-nginx
  - node_exporter,blackbox_exporter,nginx_exporter,pg_exporter,pev2,nginx,dnsmasq,ansible,etcd,python3-requests,redis,mcli

# postgres home dir in various mode
pg_home_map:
  pgsql:  '/usr/pgsql-$v'
  citus:  '/usr/pgsql-$v'
  mssql:  '/usr/'
  ivory:  '/usr/ivory-4'
  mysql:  '/usr/halo-14'
  gpsql:  '/usr/gpsql'
  polar:  '/u01/polardb_pg'
  oracle: '/u01/polardb_pg'
  oriole: '/usr/oriole-$v'

# default upstream repo (if `repo_upstream` is not explicitly set)
repo_upstream_default:
  - { name: pigsty-local   ,description: 'Pigsty Local'       ,module: local   ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://${admin_ip}/pigsty'  }} # used by intranet nodes
  - { name: pigsty-infra   ,description: 'Pigsty INFRA'       ,module: infra   ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.pigsty.io/yum/infra/$basearch' ,china: 'https://repo.pigsty.cc/yum/infra/$basearch' }}
  - { name: pigsty-pgsql   ,description: 'Pigsty PGSQL'       ,module: pgsql   ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.pigsty.io/yum/pgsql/el$releasever.$basearch' ,china: 'https://repo.pigsty.cc/yum/pgsql/el$releasever.$basearch' }}
  - { name: nginx          ,description: 'Nginx Repo'         ,module: infra   ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://nginx.org/packages/rhel/$releasever/$basearch/' }}
  - { name: docker-ce      ,description: 'Docker CE'          ,module: infra   ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.docker.com/linux/centos/$releasever/$basearch/stable'    ,china: 'https://mirrors.aliyun.com/docker-ce/linux/centos/$releasever/$basearch/stable' ,europe: 'https://mirrors.xtom.de/docker-ce/linux/centos/$releasever/$basearch/stable' }}
  - { name: baseos         ,description: 'EL 8+ BaseOS'       ,module: node    ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://dl.rockylinux.org/pub/rocky/$releasever/BaseOS/$basearch/os/'     ,china: 'https://mirrors.aliyun.com/rockylinux/$releasever/BaseOS/$basearch/os/'         ,europe: 'https://mirrors.xtom.de/rocky/$releasever/BaseOS/$basearch/os/'     }}
  - { name: appstream      ,description: 'EL 8+ AppStream'    ,module: node    ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://dl.rockylinux.org/pub/rocky/$releasever/AppStream/$basearch/os/'  ,china: 'https://mirrors.aliyun.com/rockylinux/$releasever/AppStream/$basearch/os/'      ,europe: 'https://mirrors.xtom.de/rocky/$releasever/AppStream/$basearch/os/'  }}
  - { name: extras         ,description: 'EL 8+ Extras'       ,module: node    ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://dl.rockylinux.org/pub/rocky/$releasever/extras/$basearch/os/'     ,china: 'https://mirrors.aliyun.com/rockylinux/$releasever/extras/$basearch/os/'         ,europe: 'https://mirrors.xtom.de/rocky/$releasever/extras/$basearch/os/'     }}
  - { name: powertools     ,description: 'EL 8 PowerTools'    ,module: node    ,releases: [8     ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://dl.rockylinux.org/pub/rocky/$releasever/PowerTools/$basearch/os/' ,china: 'https://mirrors.aliyun.com/rockylinux/$releasever/PowerTools/$basearch/os/'     ,europe: 'https://mirrors.xtom.de/rocky/$releasever/PowerTools/$basearch/os/' }}
  - { name: crb            ,description: 'EL 9 CRB'           ,module: node    ,releases: [  9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://dl.rockylinux.org/pub/rocky/$releasever/CRB/$basearch/os/'        ,china: 'https://mirrors.aliyun.com/rockylinux/$releasever/CRB/$basearch/os/'            ,europe: 'https://mirrors.xtom.de/rocky/$releasever/CRB/$basearch/os/'        }}
  - { name: epel           ,description: 'EL 8+ EPEL'         ,module: node    ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://mirrors.edge.kernel.org/fedora-epel/$releasever/Everything/$basearch/' ,china: 'https://mirrors.aliyun.com/epel/$releasever/Everything/$basearch/'         ,europe: 'https://mirrors.xtom.de/epel/$releasever/Everything/$basearch/'     }}
  - { name: pgdg-common    ,description: 'PostgreSQL Common'  ,module: pgsql   ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/common/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/common/redhat/rhel-$releasever-$basearch' , europe: 'https://mirrors.xtom.de/postgresql/repos/yum/common/redhat/rhel-$releasever-$basearch' }}
  - { name: pgdg-el8fix    ,description: 'PostgreSQL EL8FIX'  ,module: pgsql   ,releases: [8     ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/common/pgdg-centos8-sysupdates/redhat/rhel-8-$basearch/' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/common/pgdg-centos8-sysupdates/redhat/rhel-8-x86_64/' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/common/pgdg-centos8-sysupdates/redhat/rhel-8-x86_64/' }}
  - { name: pgdg-el9fix    ,description: 'PostgreSQL EL9FIX'  ,module: pgsql   ,releases: [  9   ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/common/pgdg-rocky9-sysupdates/redhat/rhel-9-$basearch/'  ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/common/pgdg-rocky9-sysupdates/redhat/rhel-9-x86_64/'  ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/common/pgdg-rocky9-sysupdates/redhat/rhel-9-x86_64/'  }}
  - { name: pgdg-el10fix   ,description: 'PostgreSQL EL10FIX' ,module: pgsql   ,releases: [    10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/common/pgdg-rhel10-sysupdates/redhat/rhel-10-$basearch/' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/common/pgdg-rhel10-sysupdates/redhat/rhel-10-x86_64/' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/common/pgdg-rhel10-sysupdates/redhat/rhel-10-x86_64/' }}
  - { name: pgdg13         ,description: 'PostgreSQL 13'      ,module: pgsql   ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/13/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/13/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/13/redhat/rhel-$releasever-$basearch' }}
  - { name: pgdg14         ,description: 'PostgreSQL 14'      ,module: pgsql   ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/14/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/14/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/14/redhat/rhel-$releasever-$basearch' }}
  - { name: pgdg15         ,description: 'PostgreSQL 15'      ,module: pgsql   ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/15/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/15/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/15/redhat/rhel-$releasever-$basearch' }}
  - { name: pgdg16         ,description: 'PostgreSQL 16'      ,module: pgsql   ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/16/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/16/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/16/redhat/rhel-$releasever-$basearch' }}
  - { name: pgdg17         ,description: 'PostgreSQL 17'      ,module: pgsql   ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/17/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/17/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/17/redhat/rhel-$releasever-$basearch' }}
  - { name: pgdg18-beta    ,description: 'PostgreSQL 18 Beta' ,module: beta    ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/testing/18/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/testing/18/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/testing/18/redhat/rhel-$releasever-$basearch' }}
  - { name: pgdg-extras    ,description: 'PostgreSQL Extra'   ,module: extra   ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/common/pgdg-rhel$releasever-extras/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/common/pgdg-rhel$releasever-extras/redhat/rhel-$releasever-$basearch' , europe: 'https://mirrors.xtom.de/postgresql/repos/yum/common/pgdg-rhel$releasever-extras/redhat/rhel-$releasever-$basearch' }}
  - { name: pgdg13-nonfree ,description: 'PostgreSQL 13+'     ,module: extra   ,releases: [8,9,10] ,arch: [x86_64         ] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/non-free/13/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/non-free/13/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/non-free/13/redhat/rhel-$releasever-$basearch' }}
  - { name: pgdg14-nonfree ,description: 'PostgreSQL 14+'     ,module: extra   ,releases: [8,9,10] ,arch: [x86_64         ] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/non-free/14/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/non-free/14/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/non-free/14/redhat/rhel-$releasever-$basearch' }}
  - { name: pgdg15-nonfree ,description: 'PostgreSQL 15+'     ,module: extra   ,releases: [8,9,10] ,arch: [x86_64         ] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/non-free/15/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/non-free/15/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/non-free/15/redhat/rhel-$releasever-$basearch' }}
  - { name: pgdg16-nonfree ,description: 'PostgreSQL 16+'     ,module: extra   ,releases: [8,9,10] ,arch: [x86_64         ] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/non-free/16/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/non-free/16/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/non-free/16/redhat/rhel-$releasever-$basearch' }}
  - { name: pgdg17-nonfree ,description: 'PostgreSQL 17+'     ,module: extra   ,releases: [8,9,10] ,arch: [x86_64         ] ,baseurl: { default: 'https://download.postgresql.org/pub/repos/yum/non-free/17/redhat/rhel-$releasever-$basearch' ,china: 'https://mirrors.aliyun.com/postgresql/repos/yum/non-free/17/redhat/rhel-$releasever-$basearch' ,europe: 'https://mirrors.xtom.de/postgresql/repos/yum/non-free/17/redhat/rhel-$releasever-$basearch' }}
  - { name: timescaledb    ,description: 'TimescaleDB'        ,module: extra   ,releases: [8,9   ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packagecloud.io/timescale/timescaledb/el/$releasever/$basearch'  }}
  - { name: percona        ,description: 'Percona TDE'        ,module: percona ,releases: [8,9   ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.pigsty.io/yum/percona/el$releasever.$basearch' ,china: 'https://repo.pigsty.cc/yum/percona/el$releasever.$basearch' ,origin: 'http://repo.percona.com/ppg-17.5/yum/release/$releasever/RPMS/$basearch'  }}
  - { name: wiltondb       ,description: 'WiltonDB'           ,module: mssql   ,releases: [8,9   ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.pigsty.io/yum/mssql/el$releasever.$basearch', china: 'https://repo.pigsty.cc/yum/mssql/el$releasever.$basearch' , origin: 'https://download.copr.fedorainfracloud.org/results/wiltondb/wiltondb/epel-$releasever-$basearch/' }}
  - { name: groonga        ,description: 'Groonga'            ,module: groonga ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packages.groonga.org/almalinux/$releasever/$basearch/' }}
  - { name: mysql          ,description: 'MySQL'              ,module: mysql   ,releases: [8,9   ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.mysql.com/yum/mysql-8.4-community/el/$releasever/$basearch/' }}
  - { name: mongo          ,description: 'MongoDB'            ,module: mongo   ,releases: [8,9   ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/8.0/$basearch/' ,china: 'https://mirrors.aliyun.com/mongodb/yum/redhat/$releasever/mongodb-org/8.0/$basearch/' }}
  - { name: redis          ,description: 'Redis'              ,module: redis   ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://rpmfind.net/linux/remi/enterprise/$releasever/redis72/$basearch/' }}
  - { name: grafana        ,description: 'Grafana'            ,module: grafana ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://rpm.grafana.com', china: 'https://mirrors.aliyun.com/grafana/yum/' }}
  - { name: kubernetes     ,description: 'Kubernetes'         ,module: kube    ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://pkgs.k8s.io/core:/stable:/v1.33/rpm/', china: 'https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.33/rpm/' }}
  - { name: gitlab-ee      ,description: 'Gitlab EE'          ,module: gitlab  ,releases: [8,9   ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packages.gitlab.com/gitlab/gitlab-ee/el/$releasever/$basearch' }}
  - { name: gitlab-ce      ,description: 'Gitlab CE'          ,module: gitlab  ,releases: [8,9   ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packages.gitlab.com/gitlab/gitlab-ce/el/$releasever/$basearch' }}
  - { name: clickhouse     ,description: 'ClickHouse'         ,module: click   ,releases: [8,9,10] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packages.clickhouse.com/rpm/stable/', china: 'https://mirrors.aliyun.com/clickhouse/rpm/stable/' }}

# package alias map to simplify package download & installation
%s

..."""

DEB_VARS_TMPL = """---
# License    :   AGPLv3 @ https://doc.pgsty.com/about/license
# Copyright  :   2018-2025  Ruohang Feng / Vonng (rh@vonng.com)
# %s :   %s OS specific vars

# where to register systemd files
systemd_dir: /lib/systemd/system
syslog_path: /var/log/syslog

# default packages to be downloaded (if `repo_packages` is not explicitly set)
repo_packages_default: [ node-bootstrap, infra-package, infra-addons, node-package1, node-package2, pgsql-utility, extra-modules ]

# default postgres packages to be downloaded
repo_extra_packages_default: [ pgsql-main ]

# default node packages to be installed (if `node_default_packages` is not explicitly set)
node_packages_default:
  - lz4,unzip,bzip2,pv,jq,git,ncdu,make,patch,bash,lsof,wget,uuid,tuned,nvme-cli,numactl,sysstat,iotop,htop,rsync,tcpdump
  - python3,python3-pip,socat,lrzsz,net-tools,ipvsadm,telnet,ca-certificates,openssl,keepalived,etcd,haproxy,chrony,pig
  - zlib1g,acl,dnsutils,libreadline-dev,vim-tiny,node-exporter,openssh-server,openssh-client

# default infra packages to be installed (if `infra_packages` is not explicitly set)
infra_packages_default:
  - grafana,grafana-plugins,loki,logcli,prometheus,alertmanager,pushgateway,restic,certbot,python3-certbot-nginx
  - node-exporter,blackbox-exporter,nginx-exporter,pg-exporter,pev2,nginx,dnsmasq,ansible,etcd,python3-requests,redis,mcli

# postgres home dir in various mode
pg_home_map:
  pgsql:  '/usr/lib/postgresql/$v'
  citus:  '/usr/lib/postgresql/$v'
  mssql:  '/usr/lib/postgresql/$v'
  ivory:  '/usr/ivory-4'
  mysql:  '/usr/halo-14'
  polar:  '/u01/polardb_pg'
  oracle: '/u01/polardb_pg'
  oriole: '/usr/oriole-$v'

# default upstream repo (if `repo_upstream` is not explicitly set)
repo_upstream_default:
  - { name: pigsty-local   ,description: 'Pigsty Local'       ,module: local   ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://${admin_ip}/pigsty ./' }}
  - { name: pigsty-pgsql   ,description: 'Pigsty PgSQL'       ,module: pgsql   ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.pigsty.io/apt/pgsql/${distro_codename} ${distro_codename} main', china: 'https://repo.pigsty.cc/apt/pgsql/${distro_codename} ${distro_codename} main' }}
  - { name: pigsty-infra   ,description: 'Pigsty Infra'       ,module: infra   ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.pigsty.io/apt/infra/ generic main' ,china: 'https://repo.pigsty.cc/apt/infra/ generic main' }}
  - { name: nginx          ,description: 'Nginx'              ,module: infra   ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://nginx.org/packages/${distro_name} ${distro_codename} nginx' }}
  - { name: docker-ce      ,description: 'Docker'             ,module: infra   ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://download.docker.com/linux/${distro_name} ${distro_codename} stable'                               ,china: 'https://mirrors.aliyun.com/docker-ce/linux/${distro_name} ${distro_codename} stable' }}
  - { name: base           ,description: 'Debian Basic'       ,module: node    ,releases: [11,12         ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://deb.debian.org/debian/ ${distro_codename} main non-free-firmware'                                  ,china: 'https://mirrors.aliyun.com/debian/ ${distro_codename} main restricted universe multiverse' }}
  - { name: updates        ,description: 'Debian Updates'     ,module: node    ,releases: [11,12         ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://deb.debian.org/debian/ ${distro_codename}-updates main non-free-firmware'                          ,china: 'https://mirrors.aliyun.com/debian/ ${distro_codename}-updates main restricted universe multiverse' }}
  - { name: security       ,description: 'Debian Security'    ,module: node    ,releases: [11,12         ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://security.debian.org/debian-security ${distro_codename}-security main non-free-firmware'            ,china: 'https://mirrors.aliyun.com/debian-security/ ${distro_codename}-security main non-free-firmware' }}
  - { name: base           ,description: 'Ubuntu Basic'       ,module: node    ,releases: [      20,22,24] ,arch: [x86_64         ] ,baseurl: { default: 'https://mirrors.edge.kernel.org/ubuntu/ ${distro_codename}           main universe multiverse restricted' ,china: 'https://mirrors.aliyun.com/ubuntu/ ${distro_codename}           main restricted universe multiverse' }}
  - { name: updates        ,description: 'Ubuntu Updates'     ,module: node    ,releases: [      20,22,24] ,arch: [x86_64         ] ,baseurl: { default: 'https://mirrors.edge.kernel.org/ubuntu/ ${distro_codename}-backports main restricted universe multiverse' ,china: 'https://mirrors.aliyun.com/ubuntu/ ${distro_codename}-updates   main restricted universe multiverse' }}
  - { name: backports      ,description: 'Ubuntu Backports'   ,module: node    ,releases: [      20,22,24] ,arch: [x86_64         ] ,baseurl: { default: 'https://mirrors.edge.kernel.org/ubuntu/ ${distro_codename}-security  main restricted universe multiverse' ,china: 'https://mirrors.aliyun.com/ubuntu/ ${distro_codename}-backports main restricted universe multiverse' }}
  - { name: security       ,description: 'Ubuntu Security'    ,module: node    ,releases: [      20,22,24] ,arch: [x86_64         ] ,baseurl: { default: 'https://mirrors.edge.kernel.org/ubuntu/ ${distro_codename}-updates   main restricted universe multiverse' ,china: 'https://mirrors.aliyun.com/ubuntu/ ${distro_codename}-security  main restricted universe multiverse' }}
  - { name: base           ,description: 'Ubuntu Basic'       ,module: node    ,releases: [      20,22,24] ,arch: [        aarch64] ,baseurl: { default: 'http://ports.ubuntu.com/ubuntu-ports/ ${distro_codename}           main universe multiverse restricted'   ,china: 'https://mirrors.aliyun.com/ubuntu-ports/ ${distro_codename}           main restricted universe multiverse' }}
  - { name: updates        ,description: 'Ubuntu Updates'     ,module: node    ,releases: [      20,22,24] ,arch: [        aarch64] ,baseurl: { default: 'http://ports.ubuntu.com/ubuntu-ports/ ${distro_codename}-backports main restricted universe multiverse'   ,china: 'https://mirrors.aliyun.com/ubuntu-ports/ ${distro_codename}-updates   main restricted universe multiverse' }}
  - { name: backports      ,description: 'Ubuntu Backports'   ,module: node    ,releases: [      20,22,24] ,arch: [        aarch64] ,baseurl: { default: 'http://ports.ubuntu.com/ubuntu-ports/ ${distro_codename}-security  main restricted universe multiverse'   ,china: 'https://mirrors.aliyun.com/ubuntu-ports/ ${distro_codename}-backports main restricted universe multiverse' }}
  - { name: security       ,description: 'Ubuntu Security'    ,module: node    ,releases: [      20,22,24] ,arch: [        aarch64] ,baseurl: { default: 'http://ports.ubuntu.com/ubuntu-ports/ ${distro_codename}-updates   main restricted universe multiverse'   ,china: 'https://mirrors.aliyun.com/ubuntu-ports/ ${distro_codename}-security  main restricted universe multiverse' }}
  - { name: pgdg           ,description: 'PGDG'               ,module: pgsql   ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://apt.postgresql.org/pub/repos/apt/ ${distro_codename}-pgdg main' ,china: 'https://mirrors.aliyun.com/postgresql/repos/apt/ ${distro_codename}-pgdg main' }}
  - { name: pgdg-beta      ,description: 'PGDG Beta'          ,module: beta    ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://apt.postgresql.org/pub/repos/apt/ ${distro_codename}-pgdg-testing main 18' ,china: 'https://mirrors.aliyun.com/postgresql/repos/apt/ ${distro_codename}-pgdg-testing main 18' }}
  - { name: timescaledb    ,description: 'TimescaleDB'        ,module: extra   ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packagecloud.io/timescale/timescaledb/${distro_name}/ ${distro_codename} main' }}
  - { name: citus          ,description: 'Citus'              ,module: extra   ,releases: [11,12,20,22   ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packagecloud.io/citusdata/community/${distro_name}/ ${distro_codename} main' } }
  - { name: percona        ,description: 'Percona TDE'        ,module: percona ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.pigsty.io/apt/percona ${distro_codename} main' ,china: 'https://repo.pigsty.cc/apt/percona ${distro_codename} main' ,origin: 'http://repo.percona.com/ppg-17.5/apt ${distro_codename} main' }}
  - { name: wiltondb       ,description: 'WiltonDB'           ,module: mssql   ,releases: [      20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.pigsty.io/apt/mssql/ ${distro_codename} main', china: 'https://repo.pigsty.cc/apt/mssql/ ${distro_codename} main' , origin: 'https://ppa.launchpadcontent.net/wiltondb/wiltondb/ubuntu/ ${distro_codename} main'  }}
  - { name: groonga        ,description: 'Groonga Debian'     ,module: groonga ,releases: [11,12         ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packages.groonga.org/debian/ ${distro_codename} main' }}
  - { name: groonga        ,description: 'Groonga Ubuntu'     ,module: groonga ,releases: [      20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://ppa.launchpadcontent.net/groonga/ppa/ubuntu/ ${distro_codename} main' }}
  - { name: mysql          ,description: 'MySQL'              ,module: mysql   ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.mysql.com/apt/${distro_name} ${distro_codename} mysql-8.0 mysql-tools', china: 'https://mirrors.tuna.tsinghua.edu.cn/mysql/apt/${distro_name} ${distro_codename} mysql-8.0 mysql-tools' }}
  - { name: mongo          ,description: 'MongoDB'            ,module: mongo   ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://repo.mongodb.org/apt/${distro_name} ${distro_codename}/mongodb-org/8.0 multiverse', china: 'https://mirrors.aliyun.com/mongodb/apt/${distro_name} ${distro_codename}/mongodb-org/8.0 multiverse' }}
  - { name: redis          ,description: 'Redis'              ,module: redis   ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packages.redis.io/deb ${distro_codename} main' }}
  - { name: haproxyd       ,description: 'Haproxy Debian'     ,module: haproxy ,releases: [11,12         ] ,arch: [x86_64, aarch64] ,baseurl: { default: 'http://haproxy.debian.net/ ${distro_codename}-backports-3.1 main' }}
  - { name: haproxyu       ,description: 'Haproxy Ubuntu'     ,module: haproxy ,releases: [      20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://ppa.launchpadcontent.net/vbernat/haproxy-3.1/ubuntu/ ${distro_codename} main' }}
  - { name: grafana        ,description: 'Grafana'            ,module: grafana ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://apt.grafana.com stable main' ,china: 'https://mirrors.aliyun.com/grafana/apt/ stable main' }}
  - { name: kubernetes     ,description: 'Kubernetes'         ,module: kube    ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /', china: 'https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.33/deb/ /' }}
  - { name: gitlab-ee      ,description: 'Gitlab EE'          ,module: gitlab  ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packages.gitlab.com/gitlab/gitlab-ee/${distro_name}/ ${distro_codename} main' }}
  - { name: gitlab-ce      ,description: 'Gitlab CE'          ,module: gitlab  ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packages.gitlab.com/gitlab/gitlab-ce/${distro_name}/ ${distro_codename} main' }}
  - { name: clickhouse     ,description: 'ClickHouse'         ,module: click   ,releases: [11,12,20,22,24] ,arch: [x86_64, aarch64] ,baseurl: { default: 'https://packages.clickhouse.com/deb/ stable main', china: 'https://mirrors.aliyun.com/clickhouse/deb/ stable main' }}

# package alias map to simplify package download & installation
%s

..."""

PGSQL_KERNEL_MAP = [
    ("pgsql",        "postgresql$v postgresql$v-server postgresql$v-libs postgresql$v-contrib postgresql$v-plperl postgresql$v-plpython3 postgresql$v-pltcl postgresql$v-llvmjit"  ,"postgresql-$v postgresql-client-$v postgresql-plpython3-$v postgresql-plperl-$v postgresql-pltcl-$v"),
    ("pgsql-mini",   "postgresql$v postgresql$v-server postgresql$v-libs postgresql$v-contrib"  ,"postgresql-$v postgresql-client-$v"),
    ("pgsql-core",   "postgresql$v postgresql$v-server postgresql$v-libs postgresql$v-contrib postgresql$v-plperl postgresql$v-plpython3 postgresql$v-pltcl postgresql$v-llvmjit"  ,"postgresql-$v postgresql-client-$v postgresql-plpython3-$v postgresql-plperl-$v postgresql-pltcl-$v"),
    ("pgsql-full",   "postgresql$v postgresql$v-server postgresql$v-libs postgresql$v-contrib postgresql$v-plperl postgresql$v-plpython3 postgresql$v-pltcl postgresql$v-llvmjit postgresql$v-test postgresql$v-devel"  ,"postgresql-$v postgresql-client-$v postgresql-plpython3-$v postgresql-plperl-$v postgresql-pltcl-$v postgresql-server-dev-$v"),
    ("pgsql-main",   "postgresql$v postgresql$v-server postgresql$v-libs postgresql$v-contrib postgresql$v-plperl postgresql$v-plpython3 postgresql$v-pltcl postgresql$v-llvmjit pg_repack_$v* wal2json_$v* pgvector_$v*" ,"postgresql-$v postgresql-client-$v postgresql-plpython3-$v postgresql-plperl-$v postgresql-pltcl-$v postgresql-$v-repack postgresql-$v-wal2json postgresql-$v-pgvector"),
    ("pgsql-client", "postgresql$v"  ,"postgresql-client-$v"),
    ("pgsql-server", "postgresql$v-server postgresql$v-libs postgresql$v-contrib"  ,"postgresql-$v"),
    ("pgsql-devel",  "postgresql$v-devel"  ,"postgresql-server-dev-$v"),
    ("pgsql-basic",  "pg_repack_$v* wal2json_$v* pgvector_$v*"  ,"postgresql-$v-repack postgresql-$v-wal2json postgresql-$v-pgvector"),
]


PGSQL_UTIL_MAP = [
    ("pgsql-common"        ,"patroni patroni-etcd pgbouncer pgbackrest pg_exporter pgbackrest_exporter vip-manager", "patroni pgbouncer pgbackrest pg-exporter pgbackrest-exporter vip-manager"),
    ("patroni"             ,"patroni patroni-etcd"  ,"patroni"             ),
    ("pgbouncer"           ,"pgbouncer"             ,"pgbouncer"           ),
    ("pgbackrest"          ,"pgbackrest"            ,"pgbackrest"          ),
    ("pg_exporter"         ,"pg_exporter"           ,"pg-exporter"         ),
    ("pgbackrest_exporter" ,"pgbackrest_exporter"   ,"pgbackrest-exporter" ),
    ("vip-manager"         ,"vip-manager"           ,"vip-manager"         ),
    ("pgbadger"            ,"pgbadger"              ,"pgbadger"            ),
    ("pg_activity"         ,"pg_activity"           ,"pg-activity"         ),
    ("pg_filedump"         ,"pg_filedump"           ,"postgresql-filedump" ),
    ("pgxnclient"          ,"pgxnclient"            ,"pgxnclient"          ),
    ("pgformatter"         ,"pgformatter"           ,"pgformatter"         ),
    ("pgcopydb"            ,"pgcopydb"              ,"pgcopydb"            ),
    ("pgloader"            ,"pgloader"              ,"pgloader"            ),
    ("pg_timetable"        ,"pg_timetable"          ,"pg-timetable"        ),
    ("timescaledb-utils" ,"timescaledb-tools timescaledb-event-streamer" ,"timescaledb-tools timescaledb-event-streamer" ),
]

PGSQL_EXOTIC_MAP = [
    ("wiltondb"      ,"wiltondb"                , "wiltondb" ),
    ("polardb"       ,"PolarDB"                 , "polardb-for-postgresql"),
    ("openhalodb"    ,"openhalodb"              , "openhalodb"),
    ("ivorysql"      ,"ivorysql4"               , "ivorysql-4"),
    ("oriole"        ,"orioledb_17 oriolepg_17" , "oriolepg-17 oriolepg-17-orioledb"),
    ("supabase"      ,"pg_tle_$v*,pgvector_$v*,pg_cron_$v*,pgsodium_$v*,pg_graphql_$v,pg_jsonschema_$v,wrappers_$v,vault_$v,pgjwt_$v*,pgsql_http_$v*,pg_net_$v*,supautils_$v*,index_advisor_$v,safeupdate_$v*,pg_plan_filter_$v*", "postgresql-$v-pg-tle,postgresql-$v-pg-graphql,postgresql-$v-pg-jsonschema,postgresql-$v-wrappers,postgresql-$v-pgvector,postgresql-$v-cron,postgresql-$v-pgsodium,postgresql-$v-vault,postgresql-$v-pgjwt,postgresql-$v-http,postgresql-$v-pg-net,postgresql-$v-supautils,postgresql-$v-index-advisor,postgresql-$v-pg-safeupdate,postgresql-$v-pg-plan-filter"),
    ("greenplum"     ,"open-source-greenplum-db-7", ""),
    ("cloudberry"    ,"cloudberry-db cloudberry-hll cloudberry-pgvector", ""),
    ("percona-core"  ,"percona-postgresql17,percona-postgresql17-server,percona-postgresql17-contrib,percona-postgresql17-plperl,percona-postgresql17-plpython3,percona-postgresql17-pltcl", 
     "percona-postgresql-17 percona-postgresql-client-17 percona-postgresql-plperl-17 percona-postgresql-plpython3-17 percona-postgresql-pltcl-17"),
    ("percona-main"  ,"percona-postgresql17,percona-postgresql17-server,percona-postgresql17-contrib,percona-postgresql17-plperl,percona-postgresql17-plpython3,percona-postgresql17-pltcl,percona-postgis33_17,percona-postgis33_17-client,percona-postgis33_17-utils,percona-pgvector_17,percona-wal2json17,percona-pg_repack17,percona-pgaudit17,percona-pgaudit17_set_user,percona-pg_stat_monitor17,percona-pg_gather", 
     "percona-postgresql-17 percona-postgresql-client-17 percona-postgresql-plperl-17 percona-postgresql-plpython3-17 percona-postgresql-pltcl-17 percona-postgresql-17-postgis-3 percona-postgresql-17-pgvector percona-postgresql-17-wal2json percona-postgresql-17-repack percona-postgresql-17-pgaudit percona-pgaudit17-set-user percona-pg-stat-monitor17 percona-pg-gather")
]


def is_rpm_os(code):
    return code.startswith('el')
def is_deb_os(code):
    return code.startswith('u') or code.startswith('d')

#########################################
# LOAD & GENERATE GLOBAL DATA
#########################################

# load data from files/extension.csv
def load_data(filepath=DATA_PATH):
    parse_array = lambda v: v[1:-1].split(',') if v.startswith('{') and v.endswith('}') else []
    data = []
    with open(filepath, newline='', encoding='utf-8') as csvfile:
        reader = csv.DictReader(csvfile)
        for row in reader:
            row['id'] = int(row['id'])
            if row['rpm_pg']: row['rpm_pg'] = parse_array(row['rpm_pg'])
            if row['deb_pg']: row['deb_pg'] = parse_array(row['deb_pg'])
            row['lead']        =  True if row['lead']   == 't'  else False if row['lead'] == 'f'  else None
            row['has_rpm'] = True if row['rpm_repo'] else False
            row['has_deb'] = True if row['deb_repo'] else False
            data.append(row)
    return data

DATA = load_data()
CATE = list(dict.fromkeys([i['category'] for i in DATA]))


def process_ext(ver, distro, ext, arch='x86_64'):
    if distro in ('rpm', 'el7', 'el8', 'el9'):
        REPO_KEY, PKG_KEY, VER_KEY, HAS_KEY,  = 'rpm_repo', 'rpm_pkg', 'rpm_pg', 'has_rpm'
    elif distro in ('deb', 'u20', 'u22', 'u24', 'd12', 'd11'):
        REPO_KEY, PKG_KEY, VER_KEY, HAS_KEY, = 'deb_repo', 'deb_pkg', 'deb_pg',  'has_deb'
    else:
        raise ValueError("Invalid distro: %s" % distro)
    name, alias, extension, package, pg_vers, avail = ext['name'], ext['alias'], ext['alias'], ext[PKG_KEY].replace('$v', ver), ext[VER_KEY], ext[HAS_KEY]
    hide_pkg, hide_ext, drop_pkg, drop_ext = True, True, False, False
    if avail and ver in pg_vers and name not in DISTRO_MISS[distro]:
        hide_pkg, hide_ext = False, False

    # rename extension field in certain cases
    if name == 'pgaudit' and is_rpm_os(distro) and ver in ['12','13','14','15']:
        # pgaudit bad case: pg16+ = pgaudit, pg15=pgaudit17, pg14=pgaudit16 pg13=pgaudit15 pg12=pgaudit14
        package, extension = package.replace('pgaudit', 'pgaudit' + str(int(ver)+2)), alias + str(int(ver)+2)

    # ubuntu 24.04 bad case
    if distro == 'u24' and name in ['pg_partman'] and ver in ['12','13']: # not pg_partman 12,13 for u24
        hide_pkg, hide_ext = True, True

    # just don't want them
    if alias in THROW_LIST:
        drop_pkg, drop_ext = True, True
    if alias in HIDE_LIST:
        hide_pkg, hide_ext = True, True

    if name == 'jdbc_fdw' and distro in ['el8', 'el9'] and arch == 'aarch64':
        hide_pkg, hide_ext = True, True
    if name == 'h3' and distro in ['el8'] and arch == 'x86_64' and ver == '17':
        hide_pkg, hide_ext = True, True
    if name == 'pllua' and distro in ['el8', 'el9'] and arch == 'aarch64' and ver < '16':
        hide_pkg, hide_ext = True, True
    if name == 'pgmemcache' and distro in ['el8', 'el9'] and arch == 'aarch64' and ver < '16':
        hide_pkg, hide_ext = True, True
    if name == 'pgmemcache' and distro in ['el8', 'el9'] and arch == 'x86_64' and ver < '15':
        hide_pkg, hide_ext = True, True

    # merge babelfish pkg & ext into one wiltondb package/extension
    if name == 'babelfishpg_common' and distro in ['el7', 'el8', 'el9', 'u20', 'u22', 'u24']:
        package, extension = 'wiltondb', 'wiltondb'
        hide_pkg, hide_ext = True, True
    if name in ['babelfishpg_tsql','babelfishpg_tds','babelfishpg_money']:
        drop_pkg, drop_ext = True, True
    if name.startswith('babelfishpg') and distro not in ['el7', 'el8', 'el9', 'u20', 'u22', 'u24']:
        drop_pkg, drop_ext = True, True   # wiltondb not available on other platforms

    # merge hunspell pkg & ext into one wiltondb package/extension
    if name == 'hunspell_cs_cz':
        extension = 'hunspell'
    if name.startswith('hunspell') and name != 'hunspell_cs_cz':
        drop_ext = True # package still needs to be downloaded

    pkg_aye, pkg_nay, ext_aye, ext_nay = [], [], [], []
    if not drop_pkg:
        if hide_pkg: pkg_nay.append('#' + package)
        else: pkg_aye.append(package)
    if not drop_ext:
        if hide_ext: ext_nay.append('#' + extension)
        else: ext_aye.append(extension)

    return pkg_aye, pkg_nay, ext_aye, ext_nay



# generate postgres related repo_package list and pg_extension according to pg major version and os distro
def gen_ext_list(ver, distro, arch='x86_64'):
    if distro.lower() in ('rpm', 'el7', 'el8', 'el9'):
        REPO_KEY, PKG_KEY, VER_KEY, HAS_KEY,  = 'rpm_repo', 'rpm_pkg', 'rpm_pg', 'has_rpm'
    elif distro.lower() in ('deb', 'u20', 'u22', 'u24', 'd12', 'd11'):
        REPO_KEY, PKG_KEY, VER_KEY, HAS_KEY, = 'deb_repo', 'deb_pkg', 'deb_pg',  'has_deb'
    else:
        raise ValueError("Invalid distro: %s" % distro)

    # generate pkg & ext list, per category
    repo_pkg, ext_list = [], []
    for cate in CATE:
        pkg_aye, pkg_nay, ext_aye, ext_nay = [], [], [], []
        for ext in [e for e in DATA if e['category'] == cate and e[REPO_KEY] != 'CONTRIB' and e['lead']]:
            #ext['package'], ext['pg_ver'], ext['avail'] =  ext[PKG_KEY].replace('$v', ver), ext[VER_KEY], ext[HAS_KEY]
            t_pkg_aye, t_pkg_nay, t_ext_aye, t_ext_nay = process_ext(ver, distro, ext, arch)
            pkg_aye.extend(t_pkg_aye)
            pkg_nay.extend(t_pkg_nay)
            ext_aye.extend(t_ext_aye)
            ext_nay.extend(t_ext_nay)

        repo_entry = (' '.join(list(dict.fromkeys(pkg_aye))) + ' ' + ' '.join(list(dict.fromkeys(pkg_nay)))).rstrip('# ')
        ext_entry = (' '.join(list(dict.fromkeys(ext_aye))) + ' ' + ' '.join(list(dict.fromkeys(ext_nay)))).rstrip('# ')
        repo_pkg.append(repo_entry)
        ext_list.append(ext_entry.replace('#babelfishpg_common #babelfishpg_tsql #babelfishpg_tds #babelfishpg_money', '#wiltondb'))

    return repo_pkg, ext_list

# generate a postgres related repo_package list and pg_extension according to pg major version and os distro
def gen_pkg_list(ver, distro, arch='x86_64'):
    repo_pkg = []
    if distro.lower() in ('rpm', 'el7', 'el8', 'el9'):
        REPO_KEY, PKG_KEY, VER_KEY, HAS_KEY,  = 'rpm_repo', 'rpm_pkg', 'rpm_pg', 'has_rpm'
    elif distro.lower() in ('deb', 'u20', 'u22', 'u24', 'd12', 'd11'):
        REPO_KEY, PKG_KEY, VER_KEY, HAS_KEY, = 'deb_repo', 'deb_pkg', 'deb_pg',  'has_deb'
    else:
        raise ValueError("Invalid distro: %s" % distro)
    for cate in CATE:
        pkg_aye, pkg_nay, ext_aye, ext_nay = [], [], [], []
        for ext in [e for e in DATA if e['category'] == cate and e[REPO_KEY] != 'CONTRIB' and e['lead']]:
            t_pkg_aye, t_pkg_nay, t_ext_aye, t_ext_nay = process_ext(ver, distro, ext, arch)
            pkg_aye.extend(t_pkg_aye)
            pkg_nay.extend(t_pkg_nay)
        repo_entry = ('"' + ' '.join(list(dict.fromkeys(pkg_aye))) + '" ' + ' '.join(list(dict.fromkeys(pkg_nay)))).rstrip('# ')
        cate_name = 'pg%s-%s:' % (ver, cate.lower())
        repo_pkg.append("  %-24s %s" %( cate_name,  repo_entry))
    return repo_pkg

def render_pg_ver(vers):
    return '%2s %2s %2s %2s %2s'% (
        '17' if '17' in vers else '',
        '16' if '16' in vers else '',
        '15' if '15' in vers else '',
        '14' if '14' in vers else '',
        '13' if '13' in vers else '',
    )

def title_box(header, comment):
    return """\n  #--------------------------------#\n  # %-5s %s \n  #--------------------------------#""" % (header + ':', comment)


def gen_package_map(distro):
    print("generate for %s " % distro)
    os_code, arch = distro.split('.')
    if is_rpm_os(distro):
        return gen_rpm_package_map(os_code, arch)
    elif is_deb_os(distro):
        return gen_deb_package_map(os_code, arch)


def gen_rpm_package_map(distro, arch='x86_64'):
    LAYOUT, LAYOUT2 = '  %-24s "%s"', '  %-24s %-42s # %s'
    cate, buf = '', []

    buf.append('package_map:')
    buf.append(title_box('REPO','download packages'))
    buf.append( LAYOUT % ('node-bootstrap:', DISTRO_ADHOC_PKG.get(distro)))
    buf.append(LAYOUT % ('infra-package:', RPM_COMMON_PKG[0]))
    buf.append(LAYOUT % ('infra-addons:' , RPM_COMMON_PKG[1]))
    buf.append(LAYOUT % ('extra-modules:', RPM_COMMON_PKG[2]))
    buf.append(LAYOUT % ('node-package1:', RPM_COMMON_PKG[3]))
    buf.append(LAYOUT % ('node-package2:', RPM_COMMON_PKG[4]))
    buf.append(LAYOUT % ('pgsql-utility:', RPM_COMMON_PKG[5]) + '\n')

    buf.append(title_box('PGSQL','kernel packages'))
    buf.append(LAYOUT % ('postgresql:', 'postgresql$v*'))
    for k,rpm_pkg, deb_pkg in PGSQL_KERNEL_MAP:
        buf.append(LAYOUT % ('%s:'% k, rpm_pkg))

    buf.append(title_box('MISC','pro modules'))
    for k,rpm_pkg, deb_pkg in PGSQL_EXOTIC_MAP:
        if k in  ['greenplum', 'gpsql'] and arch == 'aarch64': continue
        if k == 'cloudberry':
            buf.append(LAYOUT % ('gpsql:', rpm_pkg))
        else:
            buf.append(LAYOUT % ('%s:'% k, rpm_pkg))

    buf.append(LAYOUT % ('%s:'% "java-runtime", "java-17-openjdk-src java-17-openjdk-headless" ))
    buf.append(LAYOUT % ('%s:'% "kafka", "kafka kafka_exporter" ))
    buf.append(LAYOUT % ('%s:'% "kube-runtime", "containerd.io" ))
    buf.append(LAYOUT % ('%s:'% "sealos", "sealos" ))
    buf.append(LAYOUT % ('%s:'% "kubernetes", "kubeadm kubelet kubectl" ))
    buf.append(LAYOUT % ('%s:'% "docker", "docker-ce docker-compose-plugin" ))
    buf.append(LAYOUT % ('%s:'% "infra-extra", "victoria-metrics victoria-metrics-cluster vmutils grafana-victoriametrics-ds victoria-logs vlogscil vlagent grafana-victorialogs-ds rclone mysqld_exporter mongodb_exporter kafka_exporter" ))
    buf.append(LAYOUT % ('%s:'% "victoria", "victoria-metrics victoria-metrics-cluster vmutils grafana-victoriametrics-ds victoria-logs vlogscil vlagent grafana-victorialogs-ds" ))
    buf.append(LAYOUT % ('%s:'% "vmetrics", "victoria-metrics victoria-metrics-cluster vmutils grafana-victoriametrics-ds" ))
    buf.append(LAYOUT % ('%s:'% "vlogs", "victoria-logs vlogscil vlagent grafana-victorialogs-ds" ))
    buf.append(LAYOUT % ('%s:'% "tigerbeetle", "tigerbeetle" ))
    buf.append(LAYOUT % ('%s:'% "clickhouse", "clickhouse-server clickhouse-client clickhouse-common-static" ))

    buf.append(title_box('PGSQL','tools & utils'))
    for k,rpm_pkg, deb_pkg in PGSQL_UTIL_MAP:
        buf.append(LAYOUT % ('%s:'% k, rpm_pkg))

    buf.append(title_box('PGSQL','extensions (default pg17)'))
    buf.append('\n'.join([ i.replace('pg17-', 'pgsql-').replace('17', '$v') for i in gen_pkg_list('17', distro, arch) ]))

    for ver in PG_VERS:
        buf.append(title_box('PG' + str(ver),'packages'))
        for k,rpm_pkg, deb_pkg in PGSQL_KERNEL_MAP:
            buf.append(LAYOUT % ('%s:'% k.replace('pgsql', 'pg' + ver), rpm_pkg.replace('$v', ver)))
        buf.append('\n'.join(gen_pkg_list(ver, distro, arch)))

    for ext in DATA:
        if not ext['lead'] or ext['rpm_repo'] == 'CONTRIB': continue
        if cate != ext['category']:
            cate = ext['category']
            buf.append(title_box(cate.upper(),'extension'))
        if ext['alias'] == 'hunspell_cs_cz':
            buf.append(LAYOUT2 % ('hunspell:', '"hunspell_cs_cz_$v hunspell_de_de_$v hunspell_en_us_$v hunspell_fr_$v hunspell_ne_np_$v hunspell_nl_nl_$v hunspell_nn_no_$v hunspell_ru_ru_$v hunspell_ru_ru_aot_$v"', "# hunspell_pt_pt_$v"))
        alias, pkg  = ext['alias'], ext['rpm_pkg']
        if pkg == '': pkg = alias + '_$v' # try to generate that rpm pattern
        if ext['rpm_pkg'] != '':
            pg_ver = render_pg_ver(ext['rpm_pg'])
        else:
            pg_ver = '%s n/a ' % distro
        comment = '%-14s # %s' % (pg_ver, EXTRA_COMMENT.get(alias,''))
        if ext['alias'] == 'pgaudit':
            buf.append(LAYOUT2 % ( alias + ':' , '"'+ pkg + '"', '%-14s # %s' % (render_pg_ver(['17','16']), 'rpm latest' ) ))
            buf.append(LAYOUT2 % ( alias + '17:' , '"'+ pkg.replace('pgaudit', 'pgaudit' + '17') + '"', '%-14s # %s' % (render_pg_ver(['15']), 'rpm pg15 only' ) ))
            buf.append(LAYOUT2 % ( alias + '16:' , '"'+ pkg.replace('pgaudit', 'pgaudit' + '16') + '"', '%-14s # %s' % (render_pg_ver(['14']), 'rpm pg14 only' ) ))
            buf.append(LAYOUT2 % ( alias + '15:' , '"'+ pkg.replace('pgaudit', 'pgaudit' + '15') + '"', '%-14s # %s' % (render_pg_ver(['13']), 'rpm pg13 only' ) ))
            continue
        buf.append(LAYOUT2 % ( alias + ':' , '"'+ pkg + '"', comment))
    return '\n'.join(buf)


def gen_deb_package_map(distro, arch='x86_64'):
    LAYOUT, LAYOUT2 = '  %-24s "%s"', '  %-24s %-42s # %s'
    cate, buf = '', []

    buf.append('package_map:')
    buf.append(title_box('REPO','download packages'))
    buf.append( LAYOUT % ('node-bootstrap:', DISTRO_ADHOC_PKG.get(distro)))
    buf.append(LAYOUT % ('infra-package:', DEB_COMMON_PKG[0]))
    buf.append(LAYOUT % ('infra-addons:' , DEB_COMMON_PKG[1]))
    buf.append(LAYOUT % ('extra-modules:', DEB_COMMON_PKG[2]))
    buf.append(LAYOUT % ('node-package1:', DEB_COMMON_PKG[3]))
    buf.append(LAYOUT % ('node-package2:', DEB_COMMON_PKG[4]))
    buf.append(LAYOUT % ('pgsql-utility:', DEB_COMMON_PKG[5]) + '\n')

    buf.append(title_box('PGSQL','kernel packages'))
    buf.append(LAYOUT % ('postgresql:', 'postgresql-$v postgresql-client-$v postgresql-plpython3-$v postgresql-plperl-$v postgresql-pltcl-$v postgresql-server-dev-$v'))
    for k,rpm_pkg, deb_pkg in PGSQL_KERNEL_MAP:
        buf.append(LAYOUT % ('%s:'% k, deb_pkg))

    buf.append(title_box('MISC','pro modules'))
    for k,rpm_pkg, deb_pkg in PGSQL_EXOTIC_MAP:
        if k in ['greenplum', 'cloudberry']: continue
        if k == 'wiltondb' and distro in ['d11', 'd12']:
            buf.append(LAYOUT % ('%s:'% k, '') + ' # wiltondb not available on %s' % distro )
        else:
            buf.append(LAYOUT % ('%s:'% k, deb_pkg))

    buf.append(LAYOUT % ('%s:'% "java-runtime", "openjdk-17-jdk" ))
    buf.append(LAYOUT % ('%s:'% "kafka", "kafka kafka-exporter" ))
    if distro in ('u22', 'd12'):
        buf.append(LAYOUT % ('%s:'% "kube-docker", "containerd.io cri-dockerd" ))
    elif distro in ('d11', 'u20'):
        buf.append(LAYOUT % ('%s:'% "kube-docker", "containerd.io" ))
    buf.append(LAYOUT % ('%s:'% "sealos", "sealos" ))
    buf.append(LAYOUT % ('%s:'% "kubernetes", "kubeadm kubelet kubectl" ))
    buf.append(LAYOUT % ('%s:'% "docker", "docker-ce docker-compose-plugin" ))
    buf.append(LAYOUT % ('%s:'% "infra-extra", "victoria-metrics victoria-metrics-cluster vmutils grafana-victoriametrics-ds victoria-logs vlogscil vlagent grafana-victorialogs-ds rclone mysqld-exporter mongodb-exporter kafka-exporter" ))
    buf.append(LAYOUT % ('%s:'% "victoria", "victoria-metrics victoria-metrics-cluster vmutils grafana-victoriametrics-ds victoria-logs vlogscil vlagent grafana-victorialogs-ds" ))
    buf.append(LAYOUT % ('%s:'% "vmetrics", "victoria-metrics victoria-metrics-cluster vmutils grafana-victoriametrics-ds" ))
    buf.append(LAYOUT % ('%s:'% "vlogs", "victoria-logs vlogscil vlagent grafana-victorialogs-ds" ))
    buf.append(LAYOUT % ('%s:'% "tigerbeetle", "tigerbeetle" ))
    buf.append(LAYOUT % ('%s:'% "clickhouse", "clickhouse-server clickhouse-client clickhouse-common-static" ))

    buf.append(title_box('PGSQL','tools & utils'))
    for k,rpm_pkg, deb_pkg in PGSQL_UTIL_MAP:
        buf.append(LAYOUT % ('%s:'% k, deb_pkg))

    buf.append(title_box('PGSQL','extensions (default pg17)'))
    buf.append('\n'.join([ i.replace('pg17-', 'pgsql-').replace('17', '$v') for i in gen_pkg_list('17', distro, arch) ]))

    for ver in PG_VERS:
        buf.append(title_box('PG' + str(ver),'packages'))
        for k,rpm_pkg, deb_pkg in PGSQL_KERNEL_MAP:
            if ver == '18':
                buf.append(LAYOUT % ('%s:'% k.replace('pgsql', 'pg' + ver), deb_pkg.replace('$v', ver).replace('postgresql-client-18', 'postgresql-client-18 libpq5=18*') ))
            else:
                buf.append(LAYOUT % ('%s:'% k.replace('pgsql', 'pg' + ver), deb_pkg.replace('$v', ver)))
        buf.append('\n'.join(gen_pkg_list(ver, distro, arch)))

    for ext in DATA:
        if not ext['lead'] or ext['deb_repo'] == 'CONTRIB': continue
        if cate != ext['category']:
            cate = ext['category']
            buf.append(title_box(cate.upper(),'extension'))

        if ext['alias'] == 'hunspell_cs_cz':
            buf.append(LAYOUT2 % ('hunspell:', '"postgresql-$v-hunspell-cs-cz,postgresql-$v-hunspell-de-de,postgresql-$v-hunspell-en-us,postgresql-$v-hunspell-fr,postgresql-$v-hunspell-ne-np,postgresql-$v-hunspell-nl-nl,postgresql-$v-hunspell-nn-no,postgresql-$v-hunspell-ru-ru,postgresql-$v-hunspell-ru-ru-aot"', "# postgresql-$v-hunspell-pt-pt"))
        alias, pkg  = ext['alias'], ext['deb_pkg']
        if pkg == '': pkg = 'postgresql-$v-' + alias.replace('_', '-') # try to generate that deb pattern
        if ext['deb_pkg'] != '':
            pg_ver = render_pg_ver(ext['deb_pg'])
        else:
            pg_ver = '%s n/a ' % distro
        comment = '%-14s # %s' % (pg_ver, EXTRA_COMMENT.get(alias,''))
        buf.append(LAYOUT2 % ( alias + ':' , '"'+ pkg + '"', comment))
    return '\n'.join(buf)

def gen_distro_vars():
    for distro in DISTRO_LIST:
        os_code, arch = distro.split('.')
        if is_rpm_os(os_code):
            template = RPM_VARS_TMPL
        elif is_deb_os(os_code):
            template = DEB_VARS_TMPL
        else:
            raise ValueError("Invalid Distribution: %s" % distro)

        content = template % (distro, DISTRO_FULLNAME.get(os_code), gen_package_map(distro))
        filepath = os.path.join(VARS_PATH, '%s.yml' % distro)
        with open(filepath, 'w') as dst:
            dst.write(content)

gen_distro_vars()

