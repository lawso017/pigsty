#!/usr/bin/env ansible-playbook
---
#==============================================================#
# File      :   victoria.yml
# Desc      :   Deploy VictoriaMetrics & VictoriaLogs Stack  
# Ctime     :   2025-09-02
# Mtime     :   2025-09-02
# License   :   AGPLv3 @ https://pigsty.io/docs/about/license
# Copyright :   2025  Pigsty Community, B.J. Lawson
#==============================================================#

#----------------------------------------------#
# Deploy VictoriaMetrics & VictoriaLogs on infra nodes
#----------------------------------------------#
- name: Deploy Victoria Stack on Infra Nodes
  hosts: infra
  become: true
  gather_facts: true
  any_errors_fatal: true
  tags: [victoria, infra]

  roles:
    - role: victoria_metrics
      tags: [victoria_metrics, metrics]
    - role: victoria_logs  
      tags: [victoria_logs, logs]
    - role: vmalert
      tags: [vmalert, alerts, recording_rules]

  post_tasks:
    - name: Victoria stack deployment summary
      debug:
        msg: |
          VictoriaMetrics deployed on: {{ inventory_hostname }}:{{ victoria_metrics_port }}
          VictoriaLogs deployed on: {{ inventory_hostname }}:{{ victoria_logs_port }}
          vmalert deployed on: {{ inventory_hostname }}:{{ vmalert_port }}
          Health checks: VM {{ vm_health_check.status|default('unknown') }} | vmalert {{ vmalert_health_check.status|default('unknown') }}

#----------------------------------------------#  
# Deploy vlagent on all nodes for log collection
#----------------------------------------------#
- name: Deploy vlagent on All Nodes
  hosts: all
  become: true
  gather_facts: true
  any_errors_fatal: true
  tags: [victoria, vlagent, logs]

  roles:
    - role: vlagent
      tags: [vlagent]

  post_tasks:
    - name: vlagent deployment summary
      debug:
        msg: |
          vlagent deployed on: {{ inventory_hostname }}:{{ vlagent_port }}
          Remote write target: {{ vlagent_remote_write_url }}
          Docker logging: {{ vlagent_docker_enabled }}
          PostgreSQL logging: {{ vlagent_postgres_enabled|default(false) }}

#----------------------------------------------#
# Update Grafana data sources (if grafana enabled)
#----------------------------------------------#
- name: Update Grafana Data Sources
  hosts: infra
  become: true
  gather_facts: false
  tags: [victoria, grafana, datasources]

  tasks:
    - name: Create Victoria data sources configuration
      copy:
        content: |
          apiVersion: 1
          datasources:
            # VictoriaMetrics (replaces Prometheus)
            - name: VictoriaMetrics
              type: prometheus
              access: proxy
              url: http://{{ inventory_hostname }}:{{ victoria_metrics_port }}
              isDefault: true
              editable: true
              jsonData:
                httpMethod: POST
                prometheusType: Prometheus
                prometheusVersion: 2.40.0
                
            # VictoriaLogs (replaces Loki)  
            - name: VictoriaLogs
              type: loki
              access: proxy
              url: http://{{ inventory_hostname }}:{{ victoria_logs_port }}
              editable: true
              jsonData:
                maxLines: 1000
                derivedFields:
                  - name: "Container"
                    regex: "container=([^,}]+)"
                    url: "$${__value.raw}"
                  - name: "Service"
                    regex: "service=([^,}]+)"
                    url: "$${__value.raw}"
        dest: /etc/grafana/provisioning/datasources/victoria.yml
        owner: grafana
        group: grafana
        mode: '0644'
      notify: restart grafana
      when: 
        - grafana_enabled|default(true)
        - inventory_hostname == groups['infra'][0]

  handlers:
    - name: restart grafana
      systemd:
        name: grafana-server
        state: restarted

#----------------------------------------------#
# Validation and health checks
#----------------------------------------------#  
- name: Victoria Stack Validation
  hosts: infra
  become: false
  gather_facts: false
  tags: [victoria, validate]
  vars_files:
    - "roles/victoria_metrics/defaults/main.yml"
    - "roles/victoria_logs/defaults/main.yml"
    - "roles/vmalert/defaults/main.yml"

  tasks:
    - name: Check VictoriaMetrics health
      uri:
        url: "http://{{ inventory_hostname }}:{{ victoria_metrics_port }}/health"
        method: GET
      register: vm_health

    - name: Check VictoriaLogs health  
      uri:
        url: "http://{{ inventory_hostname }}:{{ victoria_logs_port }}/health"
        method: GET
      register: vl_health

    - name: Check vmalert health
      uri:
        url: "http://{{ inventory_hostname }}:{{ vmalert_port }}/health"
        method: GET
      register: vmalert_health

    - name: Victoria stack health summary
      debug:
        msg: |
          ðŸŽ¯ Victoria Stack Deployment Complete!
          
          VictoriaMetrics: {{ 'Healthy' if vm_health.status == 200 else 'Unhealthy' }}
          VictoriaLogs: {{ 'Healthy' if vl_health.status == 200 else 'Unhealthy' }}
          vmalert: {{ 'Healthy' if vmalert_health.status == 200 else 'Unhealthy' }}
          
          ðŸ”— Access URLs:
          VictoriaMetrics: http://{{ inventory_hostname }}:{{ victoria_metrics_port }}
          VictoriaLogs: http://{{ inventory_hostname }}:{{ victoria_logs_port }}
          vmalert: http://{{ inventory_hostname }}:{{ vmalert_port }}
          
          ðŸ“Š Next Steps:
          1. Check Grafana data sources are updated
          2. Verify Docker container logs are being collected
          3. Test queries in Grafana explore
          4. Monitor resource usage vs old stack