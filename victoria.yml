#!/usr/bin/env ansible-playbook
---
#==============================================================#
# File      :   victoria.yml
# Desc      :   Deploy VictoriaMetrics & VictoriaLogs Stack  
# Ctime     :   2025-09-02
# Mtime     :   2025-09-02
# License   :   AGPLv3 @ https://pigsty.io/docs/about/license
# Copyright :   2025  Pigsty Community, B.J. Lawson
#==============================================================#

#----------------------------------------------#
# Deploy VictoriaMetrics & VictoriaLogs on infra nodes
#----------------------------------------------#
- name: Deploy Victoria Stack on Infra Nodes
  hosts: infra
  become: true
  gather_facts: true
  any_errors_fatal: true
  tags: [victoria, infra]

  roles:
    - role: victoria_metrics
      tags: [victoria_metrics, metrics]
    - role: victoria_logs  
      tags: [victoria_logs, logs]
    - role: vmalert
      tags: [vmalert, alerts, recording_rules]

  post_tasks:
    - name: Victoria stack deployment summary
      debug:
        msg: |
          VictoriaMetrics deployed on: {{ inventory_hostname }}:{{ victoria_metrics_port }}
          VictoriaLogs deployed on: {{ inventory_hostname }}:{{ victoria_logs_port }}
          vmalert deployed on: {{ inventory_hostname }}:{{ vmalert_port }}
          Health checks: VM {{ vm_health_check.status|default('unknown') }} | vmalert {{ vmalert_health_check.status|default('unknown') }}

#----------------------------------------------#  
# Deploy Vector for log collection on all nodes
#----------------------------------------------#
- name: Deploy Vector Log Collection
  hosts: all
  become: true
  gather_facts: true
  any_errors_fatal: true
  tags: [victoria, vector, logs]

  roles:
    - role: vector
      tags: [vector]

  post_tasks:
    - name: Vector deployment summary
      debug:
        msg: |
          Vector deployed on: {{ inventory_hostname }}:{{ vector_port }}
          Target: VictoriaLogs direct (HA to all infra nodes)
          Auto-detected services: Docker={{ docker_socket_stat.stat.exists|default(false) }} | PostgreSQL={{ (pg_cluster is defined and pg_seq is defined)|default(false) }} | Nginx={{ (inventory_hostname in groups["infra"]|default([]))|default(false) }}


#----------------------------------------------#
# Update Grafana data sources (if grafana enabled)
#----------------------------------------------#
- name: Update Grafana Data Sources
  hosts: infra
  become: true
  gather_facts: false
  tags: [victoria, grafana, datasources]
  vars_files:
    - "roles/victoria_metrics/defaults/main.yml"
    - "roles/victoria_logs/defaults/main.yml"
    - "roles/vmalert/defaults/main.yml"

  tasks:
    - name: Update Pigsty datasources for Victoria Stack
      copy:
        content: |
          apiVersion: 1
          
          # Remove old datasources first
          deleteDatasources:
            - { name: Prometheus , orgId: 1 }
            - { name: VictoriaMetrics , orgId: 1 }
            - { name: Loki , orgId: 1 }
            - { name: VictoriaLogs , orgId: 1 }
            - { name: Meta , orgId: 1 }
            - { name: Static , orgId: 1 }
          
          # Install Victoria Stack datasources
          datasources:
            # VictoriaMetrics (replaces Prometheus)
            - name: Prometheus
              uid: ds-prometheus  
              type: prometheus
              access: proxy
              url: http://127.0.0.1:{{ victoria_metrics_port }}
              isDefault: true
              editable: true
              version: 1
              jsonData:
                timeInterval: "2s"
                queryTimeout: "60s"
                httpMethod: POST
                prometheusType: Prometheus
                prometheusVersion: 2.40.0
                tlsAuth: false
                tlsAuthWithCACert: false
              secureJsonData: {}
                
            # Pigsty Meta Database (PostgreSQL) - unchanged
            - name: Meta
              type: postgres
              uid: ds-meta
              url: pg-util:5436
              access: proxy
              user: dbuser_view
              database: meta
              editable: true
              jsonData: {
                "database": "meta",
                "connMaxLifetime": 14400,
                "maxIdleConns": 10,
                "maxOpenConns": 64,
                "postgresVersion": 1500,
                "sslmode": "require",
                "tlsAuth": false,
                "tlsAuthWithCACert": false
              }
              secureJsonData:
                password: DBUser.Viewer
                
            # VictoriaLogs (replaces Loki using native plugin)  
            - name: Loki
              type: victoriametrics-logs-datasource
              uid: ds-loki
              url: http://127.0.0.1:{{ victoria_logs_port }}
              access: proxy
              editable: true
              jsonData:
                maxLines: 1000
                derivedFields:
                  - name: "Container"
                    regex: "container=([^,}]+)"
                    url: "$${__value.raw}"
                  - name: "Service" 
                    regex: "service=([^,}]+)"
                    url: "$${__value.raw}"
            
            # Pigsty Static Datasource - unchanged
            - name: Static
              type: marcusolsson-static-datasource
              uid: ds-static
              editable: true
        dest: /etc/grafana/provisioning/datasources/pigsty.yml
        owner: grafana
        group: grafana
        mode: '0644'
      notify: restart grafana
      when: 
        - grafana_enabled|default(true)
        - inventory_hostname in groups['infra']

  handlers:
    - name: restart grafana
      systemd:
        name: grafana-server
        state: restarted

#----------------------------------------------#
# Validation and health checks
#----------------------------------------------#  
- name: Victoria Stack Validation
  hosts: infra
  become: false
  gather_facts: false
  tags: [victoria, validate]
  vars_files:
    - "roles/victoria_metrics/defaults/main.yml"
    - "roles/victoria_logs/defaults/main.yml"
    - "roles/vmalert/defaults/main.yml"

  tasks:
    - name: Check VictoriaMetrics health
      uri:
        url: "http://{{ inventory_hostname }}:{{ victoria_metrics_port }}/health"
        method: GET
      register: vm_health

    - name: Check VictoriaLogs health  
      uri:
        url: "http://{{ inventory_hostname }}:{{ victoria_logs_port }}/health"
        method: GET
      register: vl_health

    - name: Check vmalert health
      uri:
        url: "http://{{ inventory_hostname }}:{{ vmalert_port }}/health"
        method: GET
      register: vmalert_health

    - name: Victoria stack health summary
      debug:
        msg: |
          ðŸŽ¯ Victoria Stack Deployment Complete!
          
          VictoriaMetrics: {{ 'Healthy' if vm_health.status == 200 else 'Unhealthy' }}
          VictoriaLogs: {{ 'Healthy' if vl_health.status == 200 else 'Unhealthy' }}
          vmalert: {{ 'Healthy' if vmalert_health.status == 200 else 'Unhealthy' }}
          
          ðŸ”— Access URLs:
          VictoriaMetrics: http://{{ inventory_hostname }}:{{ victoria_metrics_port }}
          VictoriaLogs: http://{{ inventory_hostname }}:{{ victoria_logs_port }}
          vmalert: http://{{ inventory_hostname }}:{{ vmalert_port }}
          
          ðŸ“Š Next Steps:
          1. Check Grafana data sources are updated
          2. Verify Vector is collecting logs from files and Docker
          3. Verify logs are arriving in VictoriaLogs directly
          4. Test queries in Grafana explore
          5. Monitor resource usage vs old stack (should be more efficient!)
